# 注意：如果在记事本上编写，下面的缩写不要使用Tab来缩写，不然报错
spring:
  profiles:
    active: dev  # 激活开发环境配置

---
server:
  port: 7001
spring:
  profiles: dev # 开发环境
  application:
    name: microServiceZuulGateWay

eureka:
  client:
    register-with-eureka: true #服务注册开关
    fetch-registry: true # 服务发现开关
    service-url: # 注册到哪个Eureka Server服务注册中心，集群服务注册中心时多个中间用逗号分隔
      # 单机版 Eureka 服务注册中心
      # defaultZone: http://localhost:6001/eureka

      # 集群版 Eureka 服务注册中心
      defaultZone: http://EurekaServerFirst.com:6001/eureka,http://EurekaServerSecond.com:6002/eureka
  instance:
    instance-id: ${spring.application.name}:${server.port} # 指定实例ID,这样在Eureka Server服务注册中心就显示设置内容，否则显示的是主机名
    prefer-ip-address: true # 设置Eureka Server服务注册中心 实例链接 可以显示IP地址

# zuul 配置
# stripPrefix 代理转发时去掉缀吗，false：不去掉前缀，如请求 /product/get/1 则转发到 /product/get/1
#                    true： 去年前缀，如请求 /product/get/1 则转发到 /get/1
#  这个设置 true时不知道为什么没用，在研究吧
zuul:
  routes:
    # 路由名称(对应一个微服务,名称随意，保持所有路由名称唯一)
    ProductProvider:
      # 访问路径(服务的接口路径前缀)
      path: /product/**
      # 指定服务ID,会自动从 Eureka 中找到此服务的 IP 和端口
      serviceId: microServiceProductProvider
      stripPrefix: false
    ProductConsumerFeign:
      path: /consumerFeign/**
      serviceId: microServiceProductConsumerFeign
      stripPrefix: false

---
server:
  port: 7001
spring:
  profiles: prod # 开发环境
  application:
    name: microServiceZuulGateWay

eureka:
  client:
    register-with-eureka: true #服务注册开关
    fetch-registry: true # 服务发现开关
    service-url: # 注册到哪个Eureka Server服务注册中心，集群服务注册中心时多个中间用逗号分隔
      # 单机版 Eureka 服务注册中心
      # defaultZone: http://localhost:6001/eureka

      # 集群版 Eureka 服务注册中心
      defaultZone: http://EurekaServerFirst.com:6001/eureka,http://EurekaServerSecond.com:6002/eureka
  instance:
    instance-id: ${spring.application.name}:${server.port} # 指定实例ID,这样在Eureka Server服务注册中心就显示设置内容，否则显示的是主机名
    prefer-ip-address: true # 设置Eureka Server服务注册中心 实例链接 可以显示IP地址

# zuul 配置
# stripPrefix 代理转发时去掉缀吗，false：不去掉前缀，如请求 /product/get/1 则转发到 /product/get/1
#                    true： 去年前缀，如请求 /product/get/1 则转发到 /get/1
#  这个设置 true时不知道为什么没用，在研究吧
zuul:
  routes:
    # 路由名称(对应一个微服务,名称随意，保持所有路由名称唯一)
    ProductProvider:
      # 访问路径(服务的接口路径前缀)
      path: /product/**
      # 指定服务ID,会自动从 Eureka 中找到此服务的 IP 和端口
      serviceId: microServiceProductProvider
      stripPrefix: false
    ProductConsumerFeign:
      path: /consumerFeign/**
      serviceId: microServiceProductConsumerFeign
      stripPrefix: false